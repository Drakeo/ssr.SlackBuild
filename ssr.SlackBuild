#!/bin/sh

# Slackware build script for gst0-ffmpeg

# Copyright (C) 2010  Juan Valencia <jvalenciae@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=ssr
VERSION=${VERSION:-0.4.3}
BUILD=${BUILD:-1}
TAG=${TAG:-_drakeo}
NPROC=$(nproc)

if [ -z "$ARCH" ]; then
    case "$( uname -m )" in
        i?86) ARCH=i486 ;;
        arm*) ARCH=arm ;;
        *) ARCH=$( uname -m ) ;;
    esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/studio}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp/studio/pkgs}

if [ -f $CWD/$PRGNAM-$VERSION.tar.gz ]; then
echo already built tarball
else
  git clone https://github.com/MaartenBaert/ssr.git
  cd $CWD/$PRGNAM
  git checkout  $VERSION
  cd $CWD
  mv  $PRGNAM $PRGNAM-$VERSION
  tar cvf  $PRGNAM-$VERSION.tar.gz $PRGNAM-$VERSION/
  rm -rf  $PRGNAM-$VERSION
fi


if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
  LIBD="32"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
  LIBD="32"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  LIBD="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
rm -rf $TMP/$PRGNAM-$VERSION
cd $TMP
tar xvf $CWD/$PRGNAM-$VERSION.tar.?z*
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;
 
 rm $CWD/$PRGNAM-$VERSION.tar.gz
  
  if [ -d  /usr/lib64/pulseaudio ]; then
     pulse64=""
 else pulse64="-DWITH_PULSEAUDIO=FALSE"   
 fi
 if [ -d  /usr/lib64/jack ]; then
     jack64=""
 else jack64="-DWITH_JACK=FALSE"  
 fi

  if [ -d  /usr/lib/pulseaudio ]; then
     pulse32=""
 else pulse32="-DWITH_PULSEAUDIO=FALSE"   
 fi
 if [ -d  /usr/lib/jack ]; then
     jack32=""
 else jack32="-DWITH_JACK=FALSE"  
 fi

if [ -z "$WITH_QT5" ]; then
	echo "Detecting Qt version ..."
	if pkg-config --exists "Qt5Gui >= 5.7"; then
		echo "  Detected Qt5 (version $( pkg-config --modversion Qt5Gui ))."
		WITH_QT5="TRUE"
	elif pkg-config --exists "QtGui >= 4.8"; then
		echo "  Detected Qt4 (version $( pkg-config --modversion QtGui ))."
		WITH_QT5="FALSE"
	else
		echo "  Error: Qt development package not found, make sure that either Qt4 (4.8 or newer) or Qt5 (5.7 or newer) is installed."
		exit 1
  fi
fi

if [ -f  /etc/profile.d/32dev.sh ]; then
     MLIB=""
     echo -e "\e[1;32m building for multi-lib paused 10 seconds to read this\e[0m"
     echo -e "\e[1;33m If you do not want 32 bit compatable rename /etc/profile.d/32dev.sh  /etc/profile.d/32dev.sh-bkup and build \e[0m"
     echo -e "\e[1;33m or press ctrl c and exit \e[0m"
     echo -e "\e[1;34m OK need to build 32 bit first \e[0m"      
     sleep 10
     
 . /etc/profile.d/32dev.sh
mkdir -p build
cd build
CFLAGS="-m32 -O2 -march=i686 -mtune=i686"
cmake \
-DCMAKE_C_FLAGS="$SLKCFLAGS" \
-DCMAKE_CXX_FLAGS="$SLKCFLAGS" \
-DCMAKE_INSTALL_PREFIX="$PKG/usr" \
-DCMAKE_INSTALL_PREFIX=/usr \
-DLIB_SUFFIX="$LIBD" \
$jack32 \
$pulse32 \
-DWITH_QT5=$WITH_QT5 \
-DDOC_INSTALL_DIR="doc" \
-DCMAKE_INSTALL_MANDIR=/usr/man \
  .. || exit 1
  make $NUMJOBS || make || exit 1
  make install DESTDIR=$PKG || exit 1
cd ..

echo -e "\e[1;34m OK! prepare 64bit now\e[0m" 
sleep 2
cd $TMP/$PRGNAM-$VERSION
cat > 64dev.sh <<EOF
#!/bin/sh
# $Id: switch back to 64dev.sh,v 1.4 2014/10/02 09:31:37 eha Exp eha $
# Copyright (C) 2007  Frederick Emmott <mail@fredemmott.co.uk>
# Copyright 2009  Eric Hameleers, Eindhoven, NL
# Based on the file with the same name which is part of
# the Slamd64 Linux project (www.slamd64.com)

# Distributed under the GNU General Public License, version 2, as
# published by the Free Software Foundation.

# Modify the compilation/linking environment:
export PATH="/usr/bin/:/usr/lib64/qt/bin:$PATH"
export CC="gcc" # This is actually the /usr/bin/gcc wrapper
export CXX="g++"
export FC="gfortran" # This is actually the /usr/bin/gfortran wrapper
export F77="gfortran"

# Change the shell prompt to make it clear that we are in 64bit mode:
PS1='\u@\h (64bit):\w\$ '

# Check for Qt5, Qt4 and the old 'compatibility install' of Qt3:
if [ -d /opt/kde3/lib64/qt3 ]; then
  export QTDIR=/opt/kde3/lib64/qt3
fi
if [ -d /usr/lib64/qt ]; then
  export QT4DIR=/usr/lib64/qt
fi
if [ -d /usr/lib64/qt5 ]; then
  export QT5DIR=/usr/lib64/qt5
fi

if [ ! "$LD_LIBRARY_PATH" = "" ]; then
  export LD_LIBRARY_PATH="/usr/local/lib64:/lib64:/usr/lib64:$LD_LIBRARY_PATH"
else
  export LD_LIBRARY_PATH="/usr/local/lib64:/lib64:/usr/lib64"
fi

if [ ! "$PKG_CONFIG_PATH" = "" ]; then
  export PKG_CONFIG_PATH="/usr/local/lib64/pkgconfig:/usr/lib64/pkgconfig:$PKG_CONFIG_PATH"
else
  export PKG_CONFIG_PATH="/usr/local/lib64/pkgconfig:/usr/lib64/pkgconfig"
fi
EOF
. $TMP/$PRGNAM-$VERSION/64dev.sh
mkdir -p build64
cd build64
CFLAGS="-m64 -O2 -fPIC"
cmake -DCMAKE_INSTALL_PREFIX="$PKG/usr" \
$jack64 \
$pulse64 \
-DWITH_QT5=$WITH_QT5 \
-DDOC_INSTALL_DIR="doc" \
-DCMAKE_INSTALL_MANDIR=/usr/man \
 .. || exit 1
  make $NUMJOBS || make || exit 1
  make install DESTDIR=$PKG || exit 1
cd ..

else
echo -e "\e[1;34m OK building the $ARCH \e[0m" 
mkdir -p build
cd build
CFLAGS="$SLKCFLAGS"
cmake -DCMAKE_INSTALL_PREFIX="$PKG/usr" \
$jack$LIBD \
$pulse$LIBD \
-DWITH_QT5=$WITH_QT5 \
-DDOC_INSTALL_DIR="doc" \
-DCMAKE_INSTALL_MANDIR=/usr/man \
 .. || exit 1
  make $NUMJOBS || make || exit 1
  make install DESTDIR=$PKG || exit 1
cd ..
fi

# Strip binaries:
find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# Compress manual pages:
find $PKG/usr/man -type f -exec gzip -9 {} \+
for i in $( find $PKG/usr/man -type l ) ; do
  ln -s $( readlink $i ).gz $i.gz
  rm $i
done

# Add a documentation directory:
mkdir -p $PKG/usr/doc/${PRGNAM}-$VERSION
cp -a \
  AUTHORS* CHANGELOG* COPYING* README* \
  $PKG/usr/doc/${PRGNAM}-$VERSION

 # Get the version
REV=$(cat $TMP/$PRGNAM-$VERSION/.git/refs/heads/master | head -n 59 | tail -1 | cut -c1-10)

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz} 
